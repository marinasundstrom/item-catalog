@using System.ComponentModel.DataAnnotations
@inject ISnackbar Snackbar
@inject IFilePickerService FilePickerService

<div style="width: 350px; max-width: 350px;">
    <EditForm Model="@model" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator />
        <MudCard>
            <MudCardContent>
                <MudTextField Label="Name" HelperText="Max. 60 characters"
                              @bind-Value="model.Name" For="@(() => model.Name)" />
                <MudTextField Label="Description" Lines="3" Class="mt-3"
                              @bind-Value="model.Description" For="@(() => model.Description)" />

                @if (!Options.UseNativeUpload)
                {
                    <InputFile id="fileInput2" OnChange="UploadFiles" Class="mt-3" hidden accept=".jpg, .jpeg, .png" />

                    <MudButton HtmlTag="label"
                               Variant="Variant.Filled"
                               Color="Color.Primary"
                               StartIcon="@Icons.Filled.CloudUpload"
                               for="fileInput2"
                               Class="mt-3">
                        @(model.Stream is null ? "Choose an image" : "Change image")
                    </MudButton>
                }
                else
                {
                    <MudButton HtmlTag="label"
                               Variant="Variant.Filled"
                               Color="Color.Primary"
                               StartIcon="@Icons.Filled.CloudUpload"
                               for="fileInput2"
                               Class="mt-3"
                               OnClick="async () => { model.Stream = await FilePickerService.PickImage(); await Process(model.Stream); }">
                        @(model.Stream is null ? "Choose an image" : "Change image")
                    </MudButton>
                }

                @if (model.Stream is not null)
                {
                    <MudIconButton Variant="Variant.Filled"
                                   Color="Color.Secondary"
                                   Icon="@Icons.Filled.Remove"
                                   Class="ml-3 mt-3"
                                   OnClick="() => { model.Stream = null; imageBytes = null; }">
                    </MudIconButton>

                    @if (imageBytes is not null)
                    {
                        <img style="height: 150px; margin-top: 15px" src="data:image/png;base64,@Convert.ToBase64String(imageBytes)" />
                    }
                }

                <MudText Typo="Typo.subtitle2" GutterBottom="true" Class="mt-3">Max 2 mb.</MudText>

            </MudCardContent>
            <MudCardActions>
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Add</MudButton>
            </MudCardActions>
        </MudCard>

    </EditForm>
</div>

