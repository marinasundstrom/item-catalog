<style>
    .bubble-actions {

    }

    .bubble-row .bubble-actions {
        display: none;
    }

    .bubble-row:hover .bubble-actions {
        display: block;
    }

    .bubble-actions .mud-menu:visible {
        /* Revisit */
        display: block !important;
    }
</style>
<div class="bubble-row d-flex @BubbleRowClasses">
    @if(Placement == ChatMessagePlacement.Right) 
    {
        if (Actions is not null)
        {
            <div class="bubble-actions">
                @Actions
            </div>
        }
    }
    <div style="@Style" class="@BubbleClasses @Class">
        @ChildContent
    </div>
    @if(Placement == ChatMessagePlacement.Left) 
    {
        if (Actions is not null)
        {
            <div class="bubble-actions">
                @Actions
            </div>        
        }
    }
</div>

@code {
    [Parameter]
    public RenderFragment Actions { get; set; } = null!;

    [Parameter]
    public RenderFragment ChildContent { get; set; } = null!;

    [CascadingParameter]
    [Parameter]
    public ChatMessagePlacement Placement { get; set; }

    [Parameter]
    public string? Class { get; set; }

    [Parameter]
    public string? Style { get; set; }

    string BubbleClasses => $"bubble bubble-{Placement.ToString().ToLower()}";

    string BubbleRowClasses => $"justify-{(Placement == ChatMessagePlacement.Right ? "end" : "Start")}";
}