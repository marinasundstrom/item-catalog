@inject IStringLocalizer<AppBar> T
@inject IStringLocalizer<CultureSelector> T2
@inject IDialogService DialogService

<MudAppBar Elevation="1" Dense="true">
    <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start"
        OnClick="@(async (e) => await DrawerToggleCallback.InvokeAsync())" />
    <MudHidden Breakpoint="Breakpoint.SmAndDown">
        <MudText Typo="Typo.h5">@T["Catalog"]</MudText>
    </MudHidden>
    <MudSpacer />
    <AuthorizeView>
        <MudHidden Breakpoint="Breakpoint.SmAndDown">
            <SearchBox />
        </MudHidden>
        <MudSpacer />
        <MudHidden Breakpoint="Breakpoint.MdAndUp">
            <MudIconButton Icon="@Icons.Material.Filled.Search" Size="Size.Small" Color="Color.Inherit" Edge="Edge.End"
                OnClick="@(() => OpenSearchDialog())" />
        </MudHidden>
        <Notifications />
    </AuthorizeView>
    <MudMenu Dense="true" Color="Color.Inherit" AnchorOrigin="Origin.BottomLeft" TransformOrigin="Origin.TopCenter"
        PopoverClass="docs-layout-menu-shadow" ListClass="pa-2 docs-menu-list" LockScroll="true">
        <ActivatorContent>
            <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" Class="mr-2" />
        </ActivatorContent>
        <ChildContent>
            <MudMenuItem OnClick="ChangeLocale">
                <div class="d-flex">
                    <MudIcon Icon="@Icons.Material.Filled.Language" class="me-2" />
                    <MudText Style="overflow: hidden; white-space: nowrap;">@T2["ChangeLocale"]</MudText>
                </div>
            </MudMenuItem>
        </ChildContent>
    </MudMenu>
    <LoginDisplay />
</MudAppBar>

<MudDialog @bind-IsVisible="_searchDialogOpen" Options="_dialogOptions" Class="docs-gray-bg"
    ClassContent="docs-mobile-dialog-search">
    <DialogContent>
        <SearchBox />
    </DialogContent>
</MudDialog>

@code {
    private bool _searchDialogOpen;
    private void OpenSearchDialog() => _searchDialogOpen = true;
    private DialogOptions _dialogOptions = new()
    {
        Position = DialogPosition.TopCenter,
        MaxWidth = MaxWidth.Medium,
        NoHeader
    = true
    };

    [Parameter]
    public EventCallback DrawerToggleCallback { get; set; }

    async Task ChangeLocale() 
    {
        var dialogRef = DialogService.Show<CultureSelector>(T2["ChangeLocale"]);
        await dialogRef.Result;
    }
}
