@using System.Globalization
@inject IJSRuntime JSRuntime
@inject NavigationManager Nav

<EditForm Model="@this">
    <MudDialog>
        <DialogContent>
            <MudSelect Label="Locale" HelperText="Select your locale" @bind-Value="Culture">
                @foreach (var culture in supportedCultures)
                {
                    <MudSelectItem Value="@culture">@culture.DisplayName</MudSelectItem>
                }
            </MudSelect>
        </DialogContent>
        <DialogActions>
            <MudButton OnClick="Cancel">Cancel</MudButton>
            <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
        </DialogActions>
    </MudDialog>

</EditForm>

@code
{
    protected override async Task OnInitializedAsync() 
    {
        var str = await JSRuntime.InvokeAsync<string>("blazorCulture.get");
        Culture = supportedCultures.First(c => c.Name == str);
    }

    private CultureInfo[] supportedCultures = new[]
    {
        new CultureInfo("en-US"),
        new CultureInfo("sv"),
    };

    private CultureInfo Culture { get; set; }

    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    void Submit()
    {
        if (CultureInfo.CurrentCulture != Culture)
        {
            var js = (IJSInProcessRuntime)JSRuntime;
            js.InvokeVoid("blazorCulture.set", Culture.Name);
            
            Nav.NavigateTo(Nav.Uri, forceLoad: true);
        }

        MudDialog.Close(DialogResult.Ok(true));
    }

    void Cancel() => MudDialog.Cancel();
}