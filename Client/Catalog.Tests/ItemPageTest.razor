@using Catalog.Client
@using Catalog.Pages

@code
{
    [Fact]
    public void RenderPage()
    {
        var client = Substitute.For<IItemsClient>();

        client.GetItemsAsync(0, 10, null, null)
            .ReturnsForAnyArgs(new ResultsOfItemDto()
            {
                Items = new List<ItemDto>
                {
                        new ItemDto
                        {
                            Id = Guid.NewGuid().ToString(),
                            Name = "Item 1",
                            Description = "A description",
                            CommentCount = 0,
                            Created = DateTime.Now,
                            CreatedBy = "Alice"
                        }
                        },
                TotalCount = 1
            });

        client.GetItemAsync("foo")
            .ReturnsForAnyArgs(new ItemDto
            {
                Id = Guid.NewGuid().ToString(),
                Name = "Item 1",
                Description = "A description",
                CommentCount = 1,
                Image = null,
                Created = DateTime.Now,
                CreatedBy = "Alice"
            });

        client.GetCommentsAsync("foo", 0, 10, null, null)
            .ReturnsForAnyArgs(new ResultsOfCommentDto()
            {
                Items = new List<CommentDto>
                {
                    new CommentDto
                    {
                        Id = Guid.NewGuid().ToString(),
                        Text = "hello",
                        Created = DateTime.Now,
                        CreatedBy = "Alice"
                    }
                },
                TotalCount = 1
            });

        // Arrange
        using var ctx = new TestContext();
        ctx.JSInterop.Mode = JSRuntimeMode.Loose;
        ctx.Services.AddMudServices();
        ctx.Services.AddScoped<IItemsClient>(sp => client);

        // Act
        var cut = ctx.RenderComponent<ItemPage>(pb => pb.Add(c => c.Id, "foo"));

        // Assert
        cut.Find("h3").TextContent.ShouldBe("Item 1");
    }
}