{
  "x-generator": "NSwag v13.15.5.0 (NJsonSchema v10.6.6.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Notifications API",
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://localhost:5040"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "operationId": "Get",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Notifications": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "operationId": "Notifications_GetNotifications",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "tag",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "includeUnreadNotificationsCount",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "x-position": 3
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            },
            "x-position": 4
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 5
            },
            "x-position": 5
          },
          {
            "name": "sortBy",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "sortDirection",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "nullable": true,
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/SortDirection"
                    }
                  ]
                }
              ]
            },
            "x-position": 7
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationsResults"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          },
          {
            "ApiKey": []
          }
        ]
      },
      "post": {
        "tags": [
          "Notifications"
        ],
        "operationId": "Notifications_CreateNotification",
        "requestBody": {
          "x-name": "dto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          },
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/Notifications/{id}/MarkAsRead": {
      "post": {
        "tags": [
          "Notifications"
        ],
        "operationId": "Notifications_MarkNotificationAsRead",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          },
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/Notifications/MarkAllAsRead": {
      "post": {
        "tags": [
          "Notifications"
        ],
        "operationId": "Notifications_MarkAllNotificationsAsRead",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          },
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/Notifications/{id}": {
      "delete": {
        "tags": [
          "Notifications"
        ],
        "operationId": "Notifications_DeleteNotification",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          },
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/Notifications/UnreadCount": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "operationId": "Notifications_GetUnreadNotificationsCount",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          },
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/SubscriptionGroups": {
      "post": {
        "tags": [
          "SubscriptionGroups"
        ],
        "operationId": "SubscriptionGroups_CreateSubscriptionGroup",
        "requestBody": {
          "x-name": "dto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubscriptionGroupDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          },
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/SubscriptionGroups/{subscriptionGroupId}": {
      "get": {
        "tags": [
          "SubscriptionGroups"
        ],
        "operationId": "SubscriptionGroups_GetSubscriptionGroup",
        "parameters": [
          {
            "name": "subscriptionGroupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionGroupDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          },
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/SubscriptionGroups/{id}": {
      "delete": {
        "tags": [
          "SubscriptionGroups"
        ],
        "operationId": "SubscriptionGroups_DeleteSubscriptionGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          },
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/SubscriptionGroups/{subscriptionGroupId}/Subscriptions": {
      "post": {
        "tags": [
          "SubscriptionGroups"
        ],
        "operationId": "SubscriptionGroups_AddSubscriptionToGroup",
        "parameters": [
          {
            "name": "subscriptionGroupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "dto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddSubscriptionToGroupDto"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          },
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/SubscriptionGroups/{subscriptionGroupId}/Subscriptions/{subcriptionId}": {
      "delete": {
        "tags": [
          "SubscriptionGroups"
        ],
        "operationId": "SubscriptionGroups_RemoveSubscriptionToGroup",
        "parameters": [
          {
            "name": "subscriptionGroupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "subcriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          },
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/Subscriptions": {
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "operationId": "Subscriptions_CreateSubscription",
        "requestBody": {
          "x-name": "dto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubscriptionDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          },
          {
            "ApiKey": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "NotificationsResults": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResultsOfNotificationDto"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "unreadNotificationsCount": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              }
            }
          }
        ]
      },
      "ResultsOfNotificationDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationDto"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "NotificationDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "tag": {
            "type": "string",
            "nullable": true
          },
          "link": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "isRead": {
            "type": "boolean"
          },
          "read": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "published": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "scheduledFor": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifiedBy": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SortDirection": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Desc",
          "Asc"
        ],
        "enum": [
          "Desc",
          "Asc"
        ]
      },
      "CreateNotificationDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "title"
        ],
        "properties": {
          "title": {
            "type": "string",
            "minLength": 1
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "link": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "exceptUserIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "subscriptionId": {
            "type": "string",
            "nullable": true
          },
          "subscriptionGroupId": {
            "type": "string",
            "nullable": true
          },
          "scheduledFor": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "CreateSubscriptionGroupDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SubscriptionGroupDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AddSubscriptionToGroupDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "subscriptionId": {
            "type": "string"
          }
        }
      },
      "CreateSubscriptionDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "userId"
        ],
        "properties": {
          "userId": {
            "type": "string",
            "minLength": 1
          },
          "subscriptionGroupId": {
            "type": "string",
            "nullable": true
          },
          "tag": {
            "type": "string",
            "nullable": true
          }
        }
      }
    },
    "securitySchemes": {
      "JWT": {
        "type": "apiKey",
        "description": "Type into the textbox: Bearer {your JWT token}.",
        "name": "Authorization",
        "in": "header"
      },
      "ApiKey": {
        "type": "apiKey",
        "description": "Type into the textbox: {your API key}.",
        "name": "X-API-KEY",
        "in": "header"
      }
    }
  }
}